//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_iden")]
pub struct Model {
    pub email: Option<String>,
    pub icon_url: Option<String>,
    pub name: Option<String>,
    pub pass: Option<String>,
    #[sea_orm(primary_key)]
    pub user_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::book_iden::Entity")]
    BookIden,
    #[sea_orm(has_many = "super::chapter_iden::Entity")]
    ChapterIden,
}

impl Related<super::book_iden::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BookIden.def()
    }
}

impl Related<super::chapter_iden::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChapterIden.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
